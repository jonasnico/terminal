---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Grid from "../components/Grid.astro";
import Row from "../components/Row.astro";
import Button from "../components/Button.astro";
import Modal from "../components/Modal.astro";
import ModalMatrixModes from "../components/ModalMatrixModes.astro";
import Terminal from "../components/Terminal.tsx";
import { execa } from "execa";

const base = import.meta.env.BASE_URL;
const { stdout: commitInfo } = await execa("git", [
  "log",
  "-1",
  "--pretty=%s|%cd",
  "--date=short",
]);
const [commitMessage, commitDate] = commitInfo.split("|");
const commitTime = new Date().toLocaleTimeString("en-US", {
  hour: "2-digit",
  minute: "2-digit",
});
---

<Layout title="Terminal by Jonas" description="Terminally ill, terminal thrill">
  <Grid>
    <Row>
      <span class="text-focused">Jonas Nicolaysen</span>
    </Row>
    <Row>
      <span class="text-primary">just casually namedropping myself</span>
    </Row>
    <Row>
      <span class="text-primary">drop a terminal command below</span>
    </Row>
  </Grid>

  <br />

  <Terminal client:load base={base} />

  <br />

  <Card title="Latest Activity">
    <Grid>
      <Row>
        <span class="text-primary">$ git log -1</span>
      </Row>
      <Row>
        Branch: <span class="text-focused">main</span>
      </Row>
      <Row>
        Latest commit: <span class="text-muted">"{commitMessage}"</span>
      </Row>
      <Row>
        <span class="text-muted">{commitDate} {commitTime}</span>
      </Row>
    </Grid>
  </Card>

  <Card title="Matrix">
    <Button id="open-modal-button">Engage</Button>
  </Card>

  <Modal>
    <ModalMatrixModes />
  </Modal>
</Layout>

<script>
  const openModalButton = document.getElementById("open-modal-button");
  const modalBackdrop = document.getElementById("modal-backdrop");

  if (openModalButton && modalBackdrop) {
    openModalButton.addEventListener("click", () => {
      modalBackdrop.classList.add("is-open");
    });

    modalBackdrop.addEventListener("click", (event) => {
      if (event.target === modalBackdrop) {
        modalBackdrop.classList.remove("is-open");
      }
    });

    const closeButton = modalBackdrop.querySelector("button");
    if (closeButton) {
      closeButton.addEventListener("click", () => {
        modalBackdrop.classList.remove("is-open");
      });
    }
  }
</script>

<style>
  .text-focused {
    color: var(--theme-focused-foreground);
  }
  .text-primary {
    color: var(--theme-text);
  }
  .text-muted {
    color: var(--theme-text-muted);
  }
</style>
