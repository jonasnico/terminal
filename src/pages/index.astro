---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Grid from "../components/Grid.astro";
import Row from "../components/Row.astro";
import Button from "../components/Button.astro";
import Modal from "../components/Modal.astro";
import ModalMatrixModes from "../components/ModalMatrixModes.astro";

const base = import.meta.env.BASE_URL;
---

<Layout title="Terminal by Jonas" description="My personal website">
  <Grid>
    <Row>
      <span style="color: var(--theme-focused-foreground);"
        >Jonas Nicolaysen</span
      >
    </Row>
    <Row>
      <span style="color: var(--theme-text);">developing and learning</span>
    </Row>
  </Grid>

  <br />

  <Card title="links">
    <Grid>
      <Row>
        ⭢ <Button href={`${base}/blog`} variant="ghost">blog</Button>
      </Row>
      <Row>
        ⭢ <Button href={`${base}/projects`} variant="ghost">projects</Button>
      </Row>
      <Row>
        ⭢ <Button href={`${base}/contact`} variant="ghost">contact</Button>
      </Row>
    </Grid>
  </Card>

  <Card title="Status">
    <Grid>
      <Row>
        <span style="color: var(--theme-text);">$ uptime</span>
      </Row>
      <Row>
        System: <span style="color: var(--theme-focused-foreground);"
          >ONLINE</span
        >
      </Row>
      <Row>
        Last update: <span style="color: var(--theme-text-muted);"
          >{new Date().toISOString().split("T")[0]}</span
        >
      </Row>
    </Grid>
  </Card>

  <Card title="Matrix">
    <Button id="open-modal-button">Engage</Button>
  </Card>

  <Modal>
    <ModalMatrixModes />
  </Modal>
</Layout>

<script>
  const openModalButton = document.getElementById("open-modal-button");
  const modalBackdrop = document.getElementById("modal-backdrop");

  if (openModalButton && modalBackdrop) {
    openModalButton.addEventListener("click", () => {
      modalBackdrop.classList.add("is-open");
    });

    modalBackdrop.addEventListener("click", (event) => {
      if (event.target === modalBackdrop) {
        modalBackdrop.classList.remove("is-open");
      }
    });

    const closeButton = modalBackdrop.querySelector("button");
    if (closeButton) {
      closeButton.addEventListener("click", () => {
        modalBackdrop.classList.remove("is-open");
      });
    }
  }
</script>
